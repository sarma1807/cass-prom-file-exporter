//////////////////////////////////////////////////
// original code written by Jon Haddad aka rustyrazorblade
// https://github.com/rustyrazorblade/cassandra-prometheus-exporter
//
// CassPromFileExporter.java
// Cassandra Dropwizard Metrics to Prometheus as Flat File
// code version : v01_20240201 : Sarma Pydipally
// long and detailed version
//////////////////////////////////////////////////

package com.oramad;

// must and required libs
import org.apache.cassandra.metrics.CassandraMetricsRegistry;
import java.lang.instrument.Instrumentation;

// prometheus libs
import io.prometheus.client.CollectorRegistry;
import io.prometheus.client.dropwizard.DropwizardExports;
import io.prometheus.client.exporter.common.TextFormat;

// java file IO libs
import java.io.FileWriter;
import java.io.Writer;

// java scheduler libs
import java.util.concurrent.Executors;
import java.util.concurrent.ScheduledExecutorService;
import java.util.concurrent.TimeUnit;

// java time libs
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;


public class CassPromFileExporter {

  private static String vMetricsFileName = "/tmp/oramad_cass_prom_metrics_0.txt";   // write metrics to this file
  private static int vWriteToFileInterval = 5;   // write metrics to file at this interval in minutes

  public static void premain(String agentArgs, Instrumentation inst) {
    Thread thread = new Thread(() -> {
      // check if Cassandra metrics are ready and available
      do {
        try {
	  // Cassandra metrics are NOT ready - so wait for 5 seconds and then retry
          Thread.sleep(5000);
        } catch (Exception e) {
          // throw new RuntimeException(e);
	  // System.out.println("INFO  [oramad] CassPromFileExporter : cassandra metrics agent not ready.");
        }
      } while (CassandraMetricsRegistry.Metrics == null);
      System.out.println("INFO  [oramad] CassPromFileExporter : cassandra metrics agent is now ready ...");
      // Cassandra metrics are now ready and available

      // register & convert Cassandra Metrics to Prometheus format
      CollectorRegistry.defaultRegistry.register(new DropwizardExports(CassandraMetricsRegistry.Metrics));

      // schedule a task to write metrics to a flat file
      int vInitialDelay = 1;   // start writing after this delay
      int vInterval = vWriteToFileInterval;   // write at this interval
      ScheduledExecutorService scheduler = Executors.newSingleThreadScheduledExecutor();
      scheduler.scheduleAtFixedRate(() -> writeMetricsToFile(), vInitialDelay, vInterval, TimeUnit.MINUTES);

    });
    // end of thread definition

    thread.setName("OramadCassPromFileExporter");
    thread.start();
  }

  private static void writeMetricsToFile() {
    // define date time format for output
    DateTimeFormatter vDateTimeFormat = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss");

    // capture start date time
    LocalDateTime vFileWriteStartDT = LocalDateTime.now();

    // write metrics to file
    try (Writer writer = new FileWriter(vMetricsFileName)) {
      TextFormat.write004(writer, CollectorRegistry.defaultRegistry.metricFamilySamples());
      writer.close();
    } catch (Exception e) {
      // e.printStackTrace();
      // System.out.println("ERROR [oramad] CassPromFileExporter : cassandra metrics agent failed to write metrics to a file.");
    }

    // capture end date time
    LocalDateTime vFileWriteEndDT = LocalDateTime.now();

    // format date time variables for output
    String vFileWriteStartDTout = "FILE_INFO : started  writing metrics to file at : " + vFileWriteStartDT.format(vDateTimeFormat) + "\n";
    String vFileWriteEndDTout   = "FILE_INFO : finished writing metrics to file at : " +   vFileWriteEndDT.format(vDateTimeFormat) + "\n";

    // write file write timing details
    try {
      // open file in append mode
      FileWriter fileWriter = new FileWriter(vMetricsFileName, true);
      fileWriter.write(vFileWriteStartDTout);
      fileWriter.write(vFileWriteEndDTout);
      fileWriter.close();
    } catch (Exception e) {
      // e.printStackTrace();
      // System.out.println("ERROR [oramad] CassPromFileExporter : cassandra metrics agent failed to write metrics to a file.");
    }

  }

}

//////////////////////////////////////////////////

